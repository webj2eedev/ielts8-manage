<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.webj2eedev.ieltsnote.dao.WordDAO">
    <select id="queryWords" resultType="com.webj2eedev.ieltsnote.entity.WordDO" parameterType="com.webj2eedev.ieltsnote.entity.WordDO">
        select
            t.word,
            t.libs,
            t.audio_british_ossid,
            t.audio_american_ossid,
            r.tags,
            t.creator,
            t.create_time,
            ( case
                when wc.update_time is not null then wc.update_time
                else t.create_time
            end ) as update_time,
            wc.comment
        from
            ieltsnote.word t
        left join ieltsnote.word_tag_rel r
        on
            t.word = r.word
        left join ieltsnote.word_comment wc
        on
            t.word = wc.word
        <if test="tags != null">
        where json_contains(r.tags, #{tags})
        </if>
        order by
            update_time desc
    </select>

    <select id="queryWord" resultType="com.webj2eedev.ieltsnote.entity.WordDO" parameterType="com.webj2eedev.ieltsnote.entity.WordDO">
        select
            t.word,
            t.libs,
            t.audio_british_ossid,
            t.audio_american_ossid,
            r.tags,
            t.creator,
            t.create_time,
            ( case
                when wc.update_time is not null then wc.update_time
                else t.create_time
            end ) as update_time,
            wc.comment
        from
            ieltsnote.word t
        left join ieltsnote.word_tag_rel r
        on
            t.word = r.word
        left join ieltsnote.word_comment wc
        on
            t.word = wc.word
        where t.word = #{word}
        order by
            update_time desc
    </select>

    <select id="existWord" resultType="Boolean">
        SELECT count(word) FROM ieltsnote.word WHERE word = #{wordDO.word}
    </select>

    <select id="queryNewlyAddedWordCntSummary" resultType="com.webj2eedev.ieltsnote.entity.WordCntNewlyAddedDO">
        select
            count(1) `count`,
            DATE_FORMAT(create_time , '%Y-%m-%d') `time`
        from
            word w
        group by
            time
        order by
            time
    </select>

    <insert id="addWord" parameterType="com.webj2eedev.ieltsnote.entity.WordDO">
        INSERT INTO ieltsnote.word(word, libs, audio_british_ossid, audio_american_ossid, creator, create_time)
        VALUES (#{word}, #{libs}, #{audioBritishOssid}, #{audioAmericanOssid}, #{creator}, NOW())
    </insert>

    <delete id="deleteWord">
        delete FROM ieltsnote.word
        WHERE word = #{wordDO.word}
    </delete>

    <insert id="updateWordComment">
        insert into ieltsnote.word_comment(word, comment, creator, create_time, update_time)
        values (#{wordDO.word}, #{wordDO.comment}, #{wordDO.creator}, NOW(), NOW())
        ON DUPLICATE KEY UPDATE
        comment = VALUES(comment),
        update_time = VALUES(update_time)
    </insert>

    <insert id="updateWordTagRel">
        insert into ieltsnote.word_tag_rel(word, creator, tags, create_time, update_time)
        values (#{wordDO.word}, #{wordDO.creator}, #{wordDO.tags}, NOW(), NOW())
        ON DUPLICATE KEY UPDATE
        tags = VALUES(tags),
        update_time = VALUES(update_time)
    </insert>
</mapper>

